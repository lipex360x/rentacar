import {{pascalTableName}}, { {{pascalTableName}}Attributes } from '@modules/{{camelCase moduleName}}/infra/mongoose/schemas/{{pascalTableName}}.schema'
import I{{pascalTableName}}, { CreateProps, FindByIdProps, UpdateProps, DeleteProps } from '@modules/{{camelCase moduleName}}/repositories/interfaces/I{{pascalTableName}}.interface'

export default class {{pascalTableName}}Repository implements I{{pascalTableName}} {
  async create ({ content }: CreateProps): Promise<{{pascalTableName}}Attributes> {
    return {{pascalTableName}}.create({
      content
    })
  }

  async findAll (): Promise<{{pascalTableName}}Attributes[]> {
    return {{pascalTableName}}.find()
  }

  async findById ({ id }: FindByIdProps): Promise<{{pascalTableName}}Attributes> {
    return {{pascalTableName}}.findOne({ _id: { $ne: id } })
  }

  async update ({ {{camelCase moduleName}} }: UpdateProps): Promise<{{pascalTableName}}Attributes> {
    const id = {{camelCase moduleName}}._id
    return {{pascalTableName}}.findByIdAndUpdate(id, {{camelCase moduleName}}, { new: true })
  }

  async delete ({ id }: DeleteProps): Promise<{{pascalTableName}}Attributes> {
    return {{pascalTableName}}.findByIdAndDelete(id)
  }
}
